// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Artist /> should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EventArtist
    id="123"
    img="img"
    name="bob"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <img
          alt="bob"
          className="eventArtist__img"
          src="img"
        />,
        <div
          className="eventArtist__text"
        >
          <h1
            className="title"
          >
            bob
          </h1>
          <Link
            to="/artist/123"
          >
            <button
              className="btn"
            >
              view artist
            </button>
          </Link>
        </div>,
      ],
      "className": "eventArtist",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "bob",
          "className": "eventArtist__img",
          "src": "img",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1
              className="title"
            >
              bob
            </h1>,
            <Link
              to="/artist/123"
            >
              <button
                className="btn"
              >
                view artist
              </button>
            </Link>,
          ],
          "className": "eventArtist__text",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "bob",
              "className": "title",
            },
            "ref": null,
            "rendered": "bob",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <button
                className="btn"
              >
                view artist
              </button>,
              "to": "/artist/123",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "view artist",
                "className": "btn",
              },
              "ref": null,
              "rendered": "view artist",
              "type": "button",
            },
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <img
            alt="bob"
            className="eventArtist__img"
            src="img"
          />,
          <div
            className="eventArtist__text"
          >
            <h1
              className="title"
            >
              bob
            </h1>
            <Link
              to="/artist/123"
            >
              <button
                className="btn"
              >
                view artist
              </button>
            </Link>
          </div>,
        ],
        "className": "eventArtist",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "bob",
            "className": "eventArtist__img",
            "src": "img",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1
                className="title"
              >
                bob
              </h1>,
              <Link
                to="/artist/123"
              >
                <button
                  className="btn"
                >
                  view artist
                </button>
              </Link>,
            ],
            "className": "eventArtist__text",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "bob",
                "className": "title",
              },
              "ref": null,
              "rendered": "bob",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <button
                  className="btn"
                >
                  view artist
                </button>,
                "to": "/artist/123",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "view artist",
                  "className": "btn",
                },
                "ref": null,
                "rendered": "view artist",
                "type": "button",
              },
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<EventArtist /> should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EventArtist
    id="123"
    img="img"
    name="bob"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <img
          alt="bob"
          className="eventArtist__img"
          src="img"
        />,
        <div
          className="eventArtist__text"
        >
          <h1
            className="title"
          >
            bob
          </h1>
          <Link
            to="/artist/123"
          >
            <button
              className="btn"
            >
              view artist
            </button>
          </Link>
        </div>,
      ],
      "className": "eventArtist",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "bob",
          "className": "eventArtist__img",
          "src": "img",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1
              className="title"
            >
              bob
            </h1>,
            <Link
              to="/artist/123"
            >
              <button
                className="btn"
              >
                view artist
              </button>
            </Link>,
          ],
          "className": "eventArtist__text",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "bob",
              "className": "title",
            },
            "ref": null,
            "rendered": "bob",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <button
                className="btn"
              >
                view artist
              </button>,
              "to": "/artist/123",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "view artist",
                "className": "btn",
              },
              "ref": null,
              "rendered": "view artist",
              "type": "button",
            },
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <img
            alt="bob"
            className="eventArtist__img"
            src="img"
          />,
          <div
            className="eventArtist__text"
          >
            <h1
              className="title"
            >
              bob
            </h1>
            <Link
              to="/artist/123"
            >
              <button
                className="btn"
              >
                view artist
              </button>
            </Link>
          </div>,
        ],
        "className": "eventArtist",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "bob",
            "className": "eventArtist__img",
            "src": "img",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1
                className="title"
              >
                bob
              </h1>,
              <Link
                to="/artist/123"
              >
                <button
                  className="btn"
                >
                  view artist
                </button>
              </Link>,
            ],
            "className": "eventArtist__text",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "bob",
                "className": "title",
              },
              "ref": null,
              "rendered": "bob",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <button
                  className="btn"
                >
                  view artist
                </button>,
                "to": "/artist/123",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "view artist",
                  "className": "btn",
                },
                "ref": null,
                "rendered": "view artist",
                "type": "button",
              },
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
