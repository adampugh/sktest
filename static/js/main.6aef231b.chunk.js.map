{"version":3,"sources":["assets/logo.png","apis/skiddle.js","components/Search/SearchEvent.js","components/Search/Search.js","components/UI/Navbar.js","components/UI/Loader.js","components/Event/EventArtist.js","components/Event/Event.js","components/Artist/Artist.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","axios","create","baseURL","SearchEvent","_ref","name","date","desc","img","venue","id","react_default","a","createElement","className","src","alt","index_esm","react_router_dom","to","concat","Search","state","keyword","events","handleInput","e","_this","setState","target","value","handleEnter","key","onSubmit","skiddle","get","process","then","response","data","results","catch","error","console","log","_this$state","this","Logo","placeholder","onChange","onKeyPress","map","eventname","description","largeimageurl","Search_SearchEvent","Component","Navbar","Spinner","react_loader_spinner_default","type","color","height","width","EventArtist","Event","event","loading","_this2","props","match","params","_this$state$event","artists","openingtimes","MinAge","Loader","UI_Navbar","doorsopen","artistid","image","Event_EventArtist","Artist","artist","_this$state$artist","imageurl","App","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6aef231b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.22dea327.png\";","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://www.skiddle.com/api/v1',\r\n});","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaCalendarAlt, FaMapMarkerAlt } from 'react-icons/fa';\r\n\r\n\r\nconst SearchEvent = ({ name, date, desc, img, venue, id }) => (\r\n    <div className=\"searchEvent\">\r\n        <img src={img} alt={name} />\r\n        <div className=\"searchEvent__text\">\r\n            <h2 className=\"title\">{name}</h2>\r\n            <p className=\"searchEvent__text__desc\">{desc}</p>\r\n            <div className=\"searchEvent__text__date\">\r\n                <FaCalendarAlt />\r\n                <p>{date}</p>\r\n            </div>\r\n            <div className=\"searchEvent__text__venue\">\r\n                <FaMapMarkerAlt />\r\n                <p>{venue}</p>\r\n            </div>\r\n            <Link to={`/event/${id}`}>\r\n                <button className=\"btn\">view details</button>\r\n            </Link>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default SearchEvent;","import React, { Component } from 'react';\r\nimport skiddle from '../../apis/skiddle';\r\n\r\nimport Logo from '../../assets/logo.png';\r\nimport SearchEvent from './SearchEvent';\r\n\r\nclass Search extends Component {\r\n    state = {\r\n        keyword: '',\r\n        events: []\r\n    }\r\n\r\n    handleInput = (e) => {\r\n        this.setState({\r\n            keyword: e.target.value\r\n        });\r\n    }\r\n\r\n    handleEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.onSubmit();\r\n        }\r\n    }\r\n\r\n    onSubmit = () => {\r\n        const { keyword } = this.state;\r\n\r\n        skiddle.get(`/events/search/?api_key=${process.env.REACT_APP_API_KEY}&keyword=${keyword}`)\r\n            .then(response => {\r\n                this.setState({\r\n                    events: response.data.results\r\n                });\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { keyword, events } = this.state;\r\n\r\n        return (\r\n            <div className=\"search\">\r\n                <div className=\"search__hero\">\r\n                    <div className=\"container\">\r\n                        <img className=\"search__hero__logo\" src={Logo} alt=\"logo\" />\r\n                        <input \r\n                            className=\"search__hero__input\" \r\n                            placeholder=\"Search for events\"\r\n                            value={keyword}  \r\n                            onChange={this.handleInput}\r\n                            onKeyPress={this.handleEnter}  \r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"search__events\">\r\n                    <div className=\"search__events__grid container\">\r\n                    {\r\n                        events.map(({ id, eventname, date, description, largeimageurl, venue}) => <SearchEvent \r\n                            key={id} \r\n                            id={id}\r\n                            name={eventname} \r\n                            date={date} \r\n                            desc={description} \r\n                            img={largeimageurl} \r\n                            venue={venue.name} />)\r\n                    }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Logo from '../../assets/logo.png';\r\n\r\n\r\nconst Navbar = () => (\r\n    <nav className=\"navbar\">\r\n        <Link to=\"/\">\r\n            <img src={Logo} alt=\"logo\" />\r\n        </Link>\r\n    </nav>\r\n);\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nconst Spinner = () => (\r\n    <div className=\"spinner\">\r\n        <Loader \r\n            type=\"Audio\"\r\n            color=\"#00BFFF\"\r\n            height=\"100\"\t\r\n            width=\"100\"\r\n        />  \r\n    </div>\r\n);\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst EventArtist = ({ name, img, id }) => (\r\n    <div className=\"eventArtist\">\r\n        <img className=\"eventArtist__img\" src={img} alt={name} />\r\n        <div className=\"eventArtist__text\">\r\n            <h1 className=\"title\">{name}</h1>\r\n            <Link to={`/artist/${id}`}>\r\n                <button className=\"btn\">view artist</button>\r\n            </Link>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default EventArtist;","import React, { Component } from 'react';\r\nimport skiddle from '../../apis/skiddle';\r\nimport { FaCalendarAlt, FaMapMarkerAlt, FaClock, FaUser } from 'react-icons/fa';\r\n\r\nimport Navbar from '../UI/Navbar';\r\nimport Spinner from '../UI/Loader';\r\nimport EventArtist from './EventArtist';\r\n\r\nclass Event extends Component {\r\n    state = {\r\n        event: {},\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n\r\n        skiddle.get(`/events/${id}/?api_key=${process.env.REACT_APP_API_KEY}`)\r\n            .then(response => {\r\n                this.setState({\r\n                    event: response.data.results,\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { artists, venue, eventname, date, openingtimes, MinAge, largeimageurl, description } = this.state.event\r\n        const { loading } = this.state;\r\n\r\n        if (loading) {\r\n            return <Spinner />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"event\">\r\n                <Navbar />\r\n                <div className=\"event__hero\">\r\n                    <div className=\"event__hero__wrapper container\">\r\n                        <div className=\"event__hero__info\">\r\n                            <h1 className=\"title\">{eventname}</h1>\r\n                            <div className=\"event__hero__info__text\">\r\n                                <FaMapMarkerAlt />\r\n                                <p>{venue.name}</p>\r\n                            </div>\r\n                            <div className=\"event__hero__info__text\">\r\n                                <FaCalendarAlt />\r\n                                <p>{date}</p>\r\n                            </div>\r\n                            <div className=\"event__hero__info__text\">\r\n                                <FaClock />\r\n                                <p>{openingtimes.doorsopen}</p>\r\n                            </div>\r\n                            <div className=\"event__hero__info__text\">\r\n                                <FaUser />\r\n                                <p>Minimum Age: {MinAge}</p>\r\n                            </div>\r\n                        </div>\r\n                        <img className=\"event__hero__img\" src={largeimageurl} alt=\"event\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"event__desc container\">\r\n                    <p>{description}</p>\r\n                </div>\r\n                <div className=\"event__artists container\">\r\n                    <h1 className=\"title\">Artists</h1>\r\n                    { artists.map(({ artistid, image, name }) => (<EventArtist key={artistid} img={image} name={name} id={artistid} />))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport skiddle from '../../apis/skiddle';\r\n\r\nimport Navbar from '../UI/Navbar';\r\nimport Spinner from '../UI/Loader';\r\n\r\nclass Artist extends Component {\r\n    state = {\r\n        artist: {},\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n\r\n        skiddle.get(`/artist/${id}/?api_key=${process.env.REACT_APP_API_KEY}`)\r\n            .then(response => {\r\n                this.setState({\r\n                    artist: response.data.results,\r\n                    loading: false\r\n                })\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { description, name, imageurl } = this.state.artist\r\n        const { loading } = this.state;\r\n\r\n        if (loading) {\r\n            return <Spinner />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"artist\">\r\n                <Navbar />\r\n                <div className=\"artist__wrapper container\">\r\n                    <div className=\"artist__img\">\r\n                        <img src={imageurl} alt={name} />\r\n                    </div>\r\n                    <div className=\"artist__text\">\r\n                        <h1 className=\"title\">{name}</h1>\r\n                        <p>{description}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"artist__btn container\">\r\n                    <Link to=\"/\">\r\n                        <button className=\"btn\">Home</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Artist;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Search from './components/Search/Search';\nimport Event from './components/Event/Event';\nimport Artist from './components/Artist/Artist';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Route exact path=\"/\" component={Search} />\n        <Route exact path=\"/event/:id\" component={Event} />\n        <Route exact path=\"/artist/:id\" component={Artist} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./styles/styles.scss\";\n\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}